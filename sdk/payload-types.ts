/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    generators: Generator;
    'json-examples': JsonExample;
    'graph-schemas': GraphSchema;
    readings: Reading;
    roles: Role;
    constraints: Constraint;
    'constraint-spans': ConstraintSpan;
    nouns: Noun;
    verbs: Verb;
    'event-types': EventType;
    streams: Stream;
    statuses: Status;
    'state-machine-definitions': StateMachineDefinition;
    transitions: Transition;
    guards: Guard;
    graphs: Graph;
    resources: Resource;
    'resource-roles': ResourceRole;
    events: Event;
    'state-machines': StateMachine;
    'guard-runs': GuardRun;
    users: User;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "generators".
 */
export interface Generator {
  id: string;
  title?: string | null;
  version?: string | null;
  email?: string | null;
  name?: string | null;
  url?: string | null;
  description?: string | null;
  servers?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  globalPermissions?: ('create' | 'read' | 'update' | 'delete' | 'list' | 'login' | 'rateLimit')[] | null;
  replacementFieldPath?: string | null;
  globalWrapperTemplate?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  errorCodePath?: string | null;
  errorMessagePath?: string | null;
  errorTemplate?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  databaseEngine: 'Payload';
  output?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "json-examples".
 */
export interface JsonExample {
  id: string;
  title?: string | null;
  noun?:
    | ({
        relationTo: 'nouns';
        value: string | Noun;
      } | null)
    | ({
        relationTo: 'graph-schemas';
        value: string | GraphSchema;
      } | null);
  jsonExample?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  verbatim?: boolean | null;
  outputGraphs?: (string | Graph)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "nouns".
 */
export interface Noun {
  id: string;
  name?: string | null;
  plural?: string | null;
  description?: string | null;
  assistantPrompt?: string | null;
  permissions?: ('create' | 'read' | 'update' | 'delete' | 'list' | 'versioned' | 'login' | 'rateLimit')[] | null;
  stateMachineDefinitions?: (string | StateMachineDefinition)[] | null;
  objectType?: ('entity' | 'value') | null;
  referenceScheme?: (string | Noun)[] | null;
  valueType?: ('string' | 'number' | 'integer' | 'boolean' | 'object' | 'array') | null;
  minLength?: number | null;
  maxLength?: number | null;
  pattern?: string | null;
  enum?: string | null;
  format?:
    | (
        | 'date-time'
        | 'time'
        | 'date'
        | 'duration'
        | 'email'
        | 'idn-email'
        | 'hostname'
        | 'idn-hostname'
        | 'ipv4'
        | 'ipv6'
        | 'uuid'
        | 'uri'
        | 'uri-reference'
        | 'iri'
        | 'iri-reference'
        | 'uri-template'
        | 'json-pointer'
        | 'relative-json-pointer'
        | 'regex'
      )
    | null;
  minimum?: number | null;
  exclusiveMinimum?: number | null;
  exclusiveMaximum?: number | null;
  maximum?: number | null;
  multipleOf?: number | null;
  superType?: (string | null) | Noun;
  subTypes?: (string | Noun)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "state-machine-definitions".
 */
export interface StateMachineDefinition {
  id: string;
  title?: string | null;
  noun:
    | {
        relationTo: 'nouns';
        value: string | Noun;
      }
    | {
        relationTo: 'graph-schemas';
        value: string | GraphSchema;
      };
  statuses?: (string | Status)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "graph-schemas".
 */
export interface GraphSchema {
  id: string;
  name?: string | null;
  description?: string | null;
  title: string;
  plural?: string | null;
  readings?: (string | Reading)[] | null;
  roles?: (string | Role)[] | null;
  order?: number | null;
  roleRelationship?: ('many-to-one' | 'one-to-many' | 'many-to-many' | 'one-to-one') | null;
  graphs?: (string | Graph)[] | null;
  permissions?: ('create' | 'read' | 'update' | 'delete' | 'list' | 'versioned' | 'login' | 'rateLimit')[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "readings".
 */
export interface Reading {
  id: string;
  graphSchema?: (string | null) | GraphSchema;
  text: string;
  verb?: (string | null) | Verb;
  endpointUri?: string | null;
  languageCode?: string | null;
  endpointHttpVerb: 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';
  roles?: (string | Role)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "verbs".
 */
export interface Verb {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "roles".
 */
export interface Role {
  id: string;
  title: string;
  noun?:
    | ({
        relationTo: 'nouns';
        value: string | Noun;
      } | null)
    | ({
        relationTo: 'graph-schemas';
        value: string | GraphSchema;
      } | null);
  graphSchema?: (string | null) | GraphSchema;
  constraints?:
    | (
        | {
            relationTo: 'constraint-spans';
            value: string | ConstraintSpan;
          }
        | {
            relationTo: 'constraints';
            value: string | Constraint;
          }
      )[]
    | null;
  required?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "constraint-spans".
 */
export interface ConstraintSpan {
  id: string;
  title?: string | null;
  constraint?: (string | null) | Constraint;
  roles: (string | Role)[];
  subsetAutofill?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "constraints".
 */
export interface Constraint {
  id: string;
  title?: string | null;
  kind: 'UC' | 'MR' | 'SS' | 'XC' | 'EQ' | 'OR' | 'XO';
  modality: 'Alethic' | 'Deontic';
  setComparisonArgumentLength?: number | null;
  roles?:
    | (
        | {
            relationTo: 'constraint-spans';
            value: string | ConstraintSpan;
          }
        | {
            relationTo: 'roles';
            value: string | Role;
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "graphs".
 */
export interface Graph {
  id: string;
  title?: string | null;
  type: string | GraphSchema;
  verb?: (string | null) | Verb;
  resourceRoles?: (string | ResourceRole)[] | null;
  isDoneForNow?: boolean | null;
  isExample?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resource-roles".
 */
export interface ResourceRole {
  id: string;
  title?: string | null;
  graph?: (string | null) | Graph;
  resource?:
    | ({
        relationTo: 'resources';
        value: string | Resource;
      } | null)
    | ({
        relationTo: 'graphs';
        value: string | Graph;
      } | null);
  role: string | Role;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "resources".
 */
export interface Resource {
  id: string;
  title?: string | null;
  type: string | Noun;
  reference?:
    | (
        | {
            relationTo: 'resources';
            value: string | Resource;
          }
        | {
            relationTo: 'graphs';
            value: string | Graph;
          }
      )[]
    | null;
  value?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "statuses".
 */
export interface Status {
  id: string;
  title?: string | null;
  name?: string | null;
  stateMachineDefinition?: (string | null) | StateMachineDefinition;
  verb?: (string | null) | Verb;
  transitions?: (string | Transition)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transitions".
 */
export interface Transition {
  id: string;
  title?: string | null;
  from: string | Status;
  to: string | Status;
  eventType?: (string | null) | EventType;
  guard?: (string | null) | Guard;
  verb?: (string | null) | Verb;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event-types".
 */
export interface EventType {
  id: string;
  name: string;
  streams?: (string | Stream)[] | null;
  canBeCreatedbyVerbs?: (string | Verb)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "streams".
 */
export interface Stream {
  id: string;
  name: string;
  eventType: string | EventType;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guards".
 */
export interface Guard {
  id: string;
  graphSchemas?: (string | GraphSchema)[] | null;
  transition: string | Transition;
  runs?: (string | null) | GuardRun;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guard-runs".
 */
export interface GuardRun {
  id: string;
  type?: (string | null) | Guard;
  graphs?: (string | Graph)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: string;
  type: string | EventType;
  timestamp: string;
  graph?: (string | null) | Graph;
  stateMachine?: (string | null) | StateMachine;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "state-machines".
 */
export interface StateMachine {
  id: string;
  resource:
    | {
        relationTo: 'resources';
        value: string | Resource;
      }
    | {
        relationTo: 'graphs';
        value: string | Graph;
      };
  stateMachineType: string | StateMachine;
  stateMachineStatus: string | Status;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
